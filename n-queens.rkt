#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 82 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 7 #"Monaco\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 188 188 188 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 105 189 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 98 90 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 80 96 204 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 182 182 182 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 182 182 182 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 148 80 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 224 148 80 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 131 188 227 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 131 188 227 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 247 167 182 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 247 167 182 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 148 196 112 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 148 196 112 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 94 158 157 0 0 0 -1 -1 2
42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 94 158 157 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 201 78 87 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 201 78 87 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 132 196 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 132 196 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 244 177 115 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 244 177 115 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 204 75 80 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 204 75 80 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 239 75 60 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 239 75 60 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 234 67 74 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 234 67 74 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 78 218 239 0 0 0 -1 -1 2
31 #"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 78 218 239 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 91 90 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 91 90 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 123 156 96 0 0 0 -1 -1 2
50 #"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 123 156 96 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 167 215 225 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 167 215 225 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 26
#"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 130 178 114 0 0 0 -1 -1 2
37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 130 178 114 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 99 133 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 99 133 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 188 188 188
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 105 189
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 98 90 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 96 204 0
0 0 -1 -1 18 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 48 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 50 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 16 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 26 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 2351 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 178
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname allqueens"
 #"_1) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t con"
 #"structor repeating-decimal #t #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 18 3 24 #";; The N-Queens Problem "
0 0 4 29 1 #"\n"
0 0 18 3 23 #";; Code by Dan Calacci "
0 0 4 29 1 #"\n"
0 0 18 3 27 #";; Last changed: 12/05/2011"
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #"; ------------------------------------------------------------------"
 #"------------"
) 0 0 4 29 1 #"\n"
0 0 18 3 73
(
 #";; TO RUN: call (place-queens m n) where m is the number of queens a"
 #"nd n "
) 0 0 4 29 1 #"\n"
0 0 18 3 28 #";; is the size of the board."
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 18 3 57 #";; Definitions in order to represent tiles and the board:"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 25 #";; a tile is a structure:"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 4 #"tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"posn"
0 0 4 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 18 3 55 #";; where posn is the position of the tile on the board."
0 0 4 29 1 #"\n"
0 0 18 3 23 #";; and state is one of:"
0 0 4 29 1 #"\n"
0 0 18 3 72
(
 #";; -- #t : represents a position that is neither occupied nor threat"
 #"ened"
) 0 0 4 29 1 #"\n"
0 0 18 3 62
#";; -- #f : represents a position that is threatened by a queen"
0 0 4 29 1 #"\n"
0 0 18 3 60
#";; -- 'q : represents a position that is occupied by a queen"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 31 #";; A board is a  [Listof tile]."
0 0 4 29 1 #"\n"
0 0 18 3 50 #";; In a blank board, the states of all tiles is #t"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 40 #";; functions and definitions for testing"
0 0 4 29 1 #"\n"
0 0 18 3 12 #";; 4x4 board"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"board1"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 21 #"5x5-board-with-queens"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 68
#";; predicate function to test with (helps in creating a blank board)"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"predicate?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #"; ------------------------------------------------------------------"
 #"------------"
) 0 0 4 29 1 #"\n"
0 0 18 3 64
#";; Building the board, accessing the index, and checking threat:"
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #"; ------------------------------------------------------------------"
 #"------------"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 48 #";; build-board : N (N N  ->  boolean)  ->  board"
0 0 4 29 1 #"\n"
0 0 18 3 36 #";; to create a board of size n x n, "
0 0 4 29 1 #"\n"
0 0 18 3 55 #";; fill each position with indices i and j with (f i j)"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"build-board"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"rowlen"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"buildrow"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"makerow"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 51 #"                                                   "
0 0 24 3 1 #"("
0 0 14 3 1 #"f"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 40 #"                                        "
0 0 24 3 1 #"("
0 0 14 3 7 #"makerow"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 6 #"))]))]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 7 #"reverse"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 7 #"makerow"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"buildboard"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"buildrow"
0 0 4 3 1 #" "
0 0 14 3 6 #"rowlen"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"append"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"buildrow"
0 0 4 3 1 #" "
0 0 14 3 6 #"rowlen"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 24 3 1 #"("
0 0 14 3 10 #"buildboard"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 14 3 3 #"acc"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 7 #")))]))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 10 #"buildboard"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 18 3 7 #";; test"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"build-board"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 33 #";; build-empty-board : n -> board"
0 0 4 29 1 #"\n"
0 0 18 3 34 #";; builds an empty board of size n"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"build-empty-board"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"truth?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 14 3 4 #"true"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 11 #"build-board"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 6 #"truth?"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 37 #";; board-ref : board N N  ->  boolean"
0 0 4 29 1 #"\n"
0 0 18 3 75
(
 #";; returns the boolean value of the tile with coordinates (i,j) on a"
 #"-board."
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 10 #"tile-state"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 18 3 53 #";;finds the boolean of the tile in the filtered list."
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 18 3 51 #";; makes a list of the tiles with the index (i, j):"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 16 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"i"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 35 #"                                   "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 1 #"j"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 5 #")))))"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 18 3 7 #";; test"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 14 3 6 #"board1"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"board-ref"
0 0 4 3 1 #" "
0 0 14 3 6 #"board1"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"threatened"
0 0 4 3 1 #" "
0 0 14 3 2 #"n1"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 24 3 1 #"("
0 0 14 3 3 #"abs"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 18 3 8 #";; tests"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"threatened"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"threatened"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #"; ------------------------------------------------------------------"
 #"------------"
) 0 0 4 29 1 #"\n"
0 0 18 3 19 #";; Queen Placement "
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #"; ------------------------------------------------------------------"
 #"------------"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 42 #";; place-queen-on-n : board, posn -> board"
0 0 4 29 1 #"\n"
0 0 18 3 65
#";; returns a board that has a queen placed at position n in board"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"place-queen-on-n"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"update-tile"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"tile-state"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"tile-state"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#f"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 10 #"threatened"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-tile"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#t"
0 0 24 3 5 #")]))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 14 3 11 #"update-tile"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 18 3 51 #";;tests:  (\"queen-board\" also used for tests later)"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"queen-board"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"place-queen-on-n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"build-board"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 14 3 10 #"predicate?"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 37 #";; get-possible-posns : board -> list"
0 0 4 29 1 #"\n"
0 0 18 3 72
(
 #";; returns a list of all possible positions where a queen can be pla"
 #"ced."
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 18 #"get-possible-posns"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 16 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 16 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"tile-state"
0 0 4 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 18 3 6 #";tests"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 18 #"get-possible-posns"
0 0 4 3 1 #" "
0 0 14 3 11 #"queen-board"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"2"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"3"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 4 3 1 #" "
0 0 22 3 1 #"4"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 42 #";; place-a-queen : board -> [Listof board]"
0 0 4 29 1 #"\n"
0 0 18 3 49 #";; makes a list of possible next queen placements"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 13 #"place-a-queen"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-queen"
0 0 4 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 4 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 16 #"place-queen-on-n"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 30 #"                              "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-queen"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 3 #"lop"
0 0 24 3 7 #")))]))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-queen"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 18 #"get-possible-posns"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 18 3 38 #";tests  - too much data to test well. "
0 0 4 29 1 #"\n"
0 0 18 3 38 #";(place-a-queen (build-empty-board 5))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 59
#";; place-n-queens : number, number, board -> board or false"
0 0 4 29 1 #"\n"
0 0 18 3 56 #";; places the queens into the first possible full route."
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"place-n-queens"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 3 1 #" "
0 0 14 3 4 #"dest"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 3 1 #" "
0 0 14 3 4 #"dest"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 24 3 1 #"("
0 0 14 3 24 #"find-placement-from-list"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 14 3 4 #"dest"
0 0 4 29 1 #"\n"
0 0 4 3 46 #"                                              "
0 0 24 3 1 #"("
0 0 14 3 13 #"place-a-queen"
0 0 4 3 1 #" "
0 0 14 3 7 #"a-board"
0 0 24 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 14 3 8 #"boolean?"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 24 3 6 #"]))]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 78
(
 #";; find-placement-from-list : number, number, [listof board] -> boar"
 #"d or false"
) 0 0 4 29 1 #"\n"
0 0 18 3 44 #";; finds a placement of queens from the list"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 24 #"find-placement-from-list"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 3 1 #" "
0 0 14 3 4 #"dest"
0 0 4 3 1 #" "
0 0 14 3 6 #"boards"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 4 3 1 #" "
0 0 14 3 6 #"boards"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"(("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 4 29 1 #"\n"
0 0 4 3 20 #"                    "
0 0 24 3 1 #"("
0 0 14 3 14 #"place-n-queens"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 14 3 4 #"dest"
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 6 #"boards"
0 0 24 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 8 #"boolean?"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 24 3 1 #"("
0 0 14 3 24 #"find-placement-from-list"
0 0 4 3 1 #" "
0 0 14 3 4 #"orig"
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 14 3 4 #"dest"
0 0 4 29 1 #"\n"
0 0 4 3 41 #"                                         "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 6 #"boards"
0 0 24 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 14 #"possible-steps"
0 0 24 3 6 #"]))]))"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"place-n-queens"
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"build-empty-board"
0 0 4 3 1 #" "
0 0 22 3 1 #"5"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 21 #"5x5-board-with-queens"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 41 #";; place-queens : Number, Number -> board"
0 0 4 29 1 #"\n"
0 0 18 3 47 #";; places m number of queens on an n by n board"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 12 #"place-queens"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 10 #"draw-board"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 14 #"place-n-queens"
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 17 #"build-empty-board"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #";;;;;;;; VISUAL REPRESENTATION ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 4 29 1 #"\n"
0 0 18 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 40 #";; 1, 1 becomes : 19, 19 on the canvas. "
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"queen"
0 0 4 3 1 #" "
0 2          21 4 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0           5 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0$\0\0\0\"\b"
 #"\2\0\0\0\270;\354\322\0\0\0\6bKGD\0\377\0\377\0\377\240\275\247"
 #"\223\0\0\b\313IDATH\211mWYLS\317\27>3\267\24\250\245("
 #"H\272\20\t\nn\324\4\301\370`\242\270\304%\232\370\"D\243\321\27\\0F"
 #"\342\22M\214K\210>\271KL4\210\321\27\0230.\230\2706U\361A41"
 #"\202 [\251\b-\226\332\366\226J\v-mo{\357\374\37\216\31\373\367\347<"
 #"4\367\3369s\226\357|\347\314)\310"
 #"\262\314\30c\214\361\207d2\211\17\212"
 #"\242\340o\252\214\335n\337\260a\303\246"
 #"M\233\6\6\6RO\3413\276\362\a\324\300\25\2\276\3633\211D\2_]."
 #"\327\253W\257|>\37\337E\311C\207\16\1\0\0\34=zT\222$\256N\226"
 #"eQ\24-\26\213\317\347\343:\271U|\205\324\260\320\5Y\226=\36Oyy"
 #"9\0,]\272\24\355q'N\237>\215\306\316\2349\223z\326\353\365._\276"
 #"\34\0\346\316\235\353\361x\370\226\242("
 #"\222$\241\fpE\251\221}\374\370\21"
 #"\0\226-[\6\0\235\235\235\212\242(\212\202\256\4\2\201C\207\16\35>|X"
 #"\24\305T\240\332\333\333\1`\365\352\325"
 #"\224\322O\237>\375\225\16\264\n\361x"
 #"\274\243\243\243\267\267\227\303\215\32\253\252"
 #"\252(\245\373\367\357\17\4\2\2510&\22\t\213\305b\261X\30c\b#~\37"
 #"\37\37\337\277\177?\0TUU\205B!\224O$\22\311d\322f\263\265\267\267"
 #"\313\262\f\215\215\215\204\20\0x\367\356"
 #"\35\17\2341\26\211Djjj\272\272"
 #"\272\320\0\332\213\307\343\214\261\253W\257"
 #"^\273v\215\245,\334\355\352\352"
 #"\252\255\255\235\234\234\304T\241\236\267o\337\"\354\267"
 #"o\337\246\373\366\355\233?\177>\0\340W\306\30!D"
) 500
(
 #"\226e\215FSPP\320\337\337\317\30\243\2242\306\0@\255V3\306\34\16\207"
 #"\303\341@\337Q#\36\264\333\355&\223I\253\325RJ\223\311$!DQ\224\326"
 #"\326V\0X\260`\301\336\275{iss\363\300\300\0\0l\332\264\2111&\b"
 #"\202\242(\370\e\16\207[ZZ\24E!\204\b\202\220H$\0`jj\312n"
 #"\267\333l\266\251\251)J)!\204{\323\324\324411\301\335\222e\231R\272"
 #"y\363f\0\30\30\30\270\177\377>(\212b\263\331N\2348\21\211D\376\"\313"
 #"\261c\307\0\300\351t\246\226\235\317\347CXFGGSk\321\351t\2\300\361"
 #"\343\307SK\23=>y\362doo/c\214\22B\346\315\233\247\323\351\332\332"
 #"\332\20\r$\222$I\202 \0@GG\a~Q\24\5\0~\376\374I)\5"
 #"\200\211\211\t\344\e\236\372\362\345\v\0"
 #"p1J\251,\313\0\320\326\326\246\323"
 #"\351\26.\\\310\30\243\212\242PJ\363"
 #"\363\363o\334\270\221L&\323\322\322\24"
 #"EQ\251T\0\20\b\4\0\340\365\353\327\321hT\245R!\217DQDu?"
 #"~\374P\251T\250Q\226\345\27/^\0@8\34\216\305b(\200\b_\277~"
 #"\335h4\"\316\24\3354\231LO\237>\355\351\351A9\0\220$\311\355v\3"
 #"@CC\203(\212Hb\0p8\34(\200\270a\364\303\303\303w\357\336\345\376"
 #"\t\202 \3132!\244\247\247\347\345\313\227EEE\222$QJ\251$I\2141"
 #"4\336\324\324D)\305\363\212\242LNN\242+\357\337\277W\251Tj\265ZQ"
 #"\224\341\341a4622\202a\1\0VHZZ\232\317\347\303\362\300\260\232\233"
 #"\233\1 ;;[\255V'\22\t\300*A7\1\300f\263az\275^oA"
 #"A\1\32\333\265kW4\32\225e9\24\n\255Y\263\6%+**\"\221\210,\313"
) 500
(
 #"\321ht\347\316\235\3701??\37\333"
 #"\ec\254\247\247\a\243\34\34\34\304\32"
 #"\5\214\314\357\367cs:{\366,\22"
 #"\211\263.;;\233\20\322\335\335\255("
 #"\312\310\310\b&#;;\233\23\265\253\253\v\0\f\6\3\362\302\345ras9"
 #"{\366,\0\224\227\227\a\203A4\377\e4\215F\223\237\237\17\0uuu6"
 #"\233\r\311\206\207M&\23c\354\375\373"
 #"\367\204\20\364 77W\253\325\"Y\30c\237?\177\6\0\255V\2138c\361"
 #"\f\17\17\327\325\325\1@qq1\222"
 #"\2161F\321\375\364\364t\223\311\204\317"
 #"\217\37?F\202\241^\264\372\354\331\263"
 #"X,\206\371\327j\265\323\246M\3\0"
 #"\257\327+\3132\312\207\303\341\234\234\34"
 #"\254zBHSS\23\262\267\260\2600##\3\361\240HJA\20\212\212\212\360"
 #"\202\250\253\253s\273\335\202 \240\264\307"
 #"\343\321\353\365\26\213ehh\b#\313\314\314\214\305bh`pp\320b\261\30"
 #"\215F\257\327\213 \351t:\237\317w"
 #"\356\3349\263\331\f\0z\275\36\23\17\0*\316u\275^\17\0\323\247O\a\0"
 #"\253\325ZVV\306\30\323j\265~\277\37e\236?\177.\212\"/g\0\370\360"
 #"\341\3\257\4\354\207\210-f133"
 #"\23\213\n\370\342=\273\265\265\225\0202{\366l\0X\265jU}}=/#"
 #"\356\32!\4\303\305\245V\253\371\26\27"
 #"\276r\345\312\312\225+\261Q\20B\254"
 #"V+\277\333\b\266KEQ\272\272\272"
 #"\226,Y\222\227\227'\313\362\257_\277\2205SSS\0\220\226\226f0\0302"
 #"22\260\305\b\202\220L&\325ju \20\320h4\223\223\223\222$\205B!"
 #"J\251J\245\222$\t\375\2301c\206\317\347\373\362\345Kii):\252\302\213"
 #"@\226e\203\301@\b\361\373\375H\353\254\254\254\334"
 #"\334\\\225J\25\217\307].\227\313\345\202\177-,^"
) 500
(
 #"$\2!$\231L\212\242\230L&\265Z-&\330`0\374\311\31J\247\245\245"
 #"\31\215\306\226\226\226\312\312\312\214\214\f"
 #"\223\311466\346t:q\227\20\262{\367\3569s\346\24\24\24dee\241"
 #"\215X,\26\213\305\274^\357\300\300\300"
 #"\335\273wy[\310\311\311\2319sf4\32\r\6\203---\271\271\271\377\227"
 #"3~\a*\212r\351\322%\236\225\352\352\352\a\17\36\364\367\367{<\236`0"
 #"\30\f\6EQ\34\35\35u\273\335.\227\313\343\361\370|\276`0\30\n\205\306"
 #"\306\306z{{\37>|X]]\315#\276x\361\"\277\307\221\26\4\357F\354"
 #"\375\0\20\215F\367\354\331SVV\266"
 #"}\373\366\354\354lI\222\276}\373f"
 #"\267\333\373\372\372:::\360\332M]\353\326\255+---))Y\270pa"
 #"QQQzz\372\344\344dsssgg\347\235;w\260\302\376`\216\210s"
 #"\223\202 \330\355v\267\333\255\323\351\36"
 #">|x\361\342E\236\25\364\327l6"
 #"\347\345\345%\22\211H$\322\331\331\371\227\355S\247NUVV\212\242XXX"
 #"X\\\\\214\205\374g;uH\345c\336\301\203\aQ5\0\314\2313\347\302\205"
 #"\v\255\255\255\337\277\177\367\373\375\210\347"
 #"\330\330X(\24\22E\321\341p\274y"
 #"\363\346\374\371\363\263f\315\342:\217\34"
 #"9\302\347\314\324\271\210`\252\360b\305"
 #"B\1\200\257_\277\226\225\225\325\324\324"
 #"l\337\276}\321\242E\0\20\211D\334"
 #"n\267\335n\307\256\212~\344\345\345\25"
 #"\26\26\32\f\6\275^\37\217\307m6"
 #"\333\275{\367n\337\276\335\321\321\261x"
 #"\361\342\177p7uB\346\303\232\337\357"
 #"\257\257\257\17\207\303^\257\367\376\375\373"
 #"k\327\256\375\27\355\177\27;\245t\375\372\365MMMn\267{bb\342"
 #"\362\345\313\343\343\343\251\274\343K\205"
 #"\275\221\23D\20\4\306\330\324\324\224\325"
) 326
(
 #"j\355\357\357ollD\275\265\265\265f\263977\27o\34\225J\225L&"
 #"\3\201@0\30\354\356\356\276y\363\246"
 #"\325j\5\200\3\a\16\374\374\371\263\252"
 #"\252J\247\323\245\366\232?\221\361!\211"
 #"\207\330\320\320 \b\302\216\35;\36=z444466\26\16\207\307\307\307"
 #"\275^\357\310\310\210\307\343q8\34N"
 #"\247\323\347\363\205B\241H$\22\f\6\35\16\307\223'O\266l\331\2\0\267n"
 #"\335\372o\302~G\6)\215\0\0\2\201@<\36\37\34\0344\32\215\221H\304"
 #"f\263\265\266\266\266\267\267\267\265\265\365"
 #"\365\365\375\3411!\2141\263\331\274b"
 #"\305\212\362\362\362\222\222\222\212\212\212\215"
 #"\e7z<\36\374\373\243\327\3539`\177\330\310Ge\306X\"\221@\232}\370"
 #"\360a\353\326\255\251\30 ,\224R\215"
 #"F\243\321hR\265p\304\266m\333\366"
 #"\371\363g\267\333\35\f\6\377\e\31\341"
 #"\203\37?\203\211\25E\261\247\247\307\351"
 #"t\216\216\216\266\267\267\177\377\376\35\273"
 #"-\217\211\20\222\236\236\236\225\225e0\30\f\6CQQQqq\361\254Y\263"
 #"\314f\263\321h\304\231\372\257[\342\177_\213\257\261"
 #"\375\316\360\3\0\0\0\0IEND\256B`\202"
) 0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 51 #";; grid-cell-width: the width of a single grid cell"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 22 3 2 #"37"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 18 3 31 #";; build-grid : number -> image"
0 0 4 29 1 #"\n"
0 0 18 3 39 #";; builds a board with a grid of size n"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"build-grid"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"buildgrid"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 3 1 #" "
0 0 24 3 2 #"[("
0 0 14 3 1 #"="
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 11 #"empty-scene"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 18 #"                  "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"add-line"
0 0 4 3 1 #" "
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 8 #"add-line"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 36 #"                                    "
0 0 24 3 1 #"("
0 0 14 3 9 #"buildgrid"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 4 3 1 #" "
0 0 22 3 1 #"1"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"0"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 5 #")]))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 9 #"buildgrid"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 54 #";; place-queen-on-grid : number, number, image-> image"
0 0 4 29 1 #"\n"
0 0 18 3 41 #";; places a queen onto grid position x, y"
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"place-queen-on-grid"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 4 3 1 #" "
0 0 14 3 5 #"queen"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 14 3 3 #"gcw"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 4 3 1 #" "
0 0 22 3 3 #"1/2"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 3 #"scn"
0 0 24 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 18 3 30 #";; draw-board : board -> image"
0 0 4 29 1 #"\n"
0 0 18 3 37 #";; draws a given board on the canvas."
0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"draw-board"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 24 3 1 #"("
0 0 16 3 5 #"local"
0 0 4 3 1 #" "
0 0 24 3 1 #"["
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 24 3 1 #"("
0 0 16 3 6 #"define"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"drawboard"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 24 3 1 #"("
0 0 16 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"build-grid"
0 0 4 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 10 #"tile-state"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"q"
0 0 24 3 1 #")"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 19 #"place-queen-on-grid"
0 0 4 29 1 #"\n"
0 0 4 3 55 #"                                                       "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-x"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 55 #"                                                       "
0 0 24 3 1 #"("
0 0 14 3 6 #"posn-y"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"tile-posn"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 55 #"                                                       "
0 0 24 3 1 #"("
0 0 14 3 9 #"drawboard"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 24 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 9 #"drawboard"
0 0 4 3 1 #" "
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 6 #"))]))]"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 24 3 1 #"("
0 0 14 3 9 #"drawboard"
0 0 4 3 1 #" "
0 0 14 3 5 #"board"
0 0 24 3 3 #")))"
0           0
